{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/home/vitor/web-projects/starter-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/home/vitor/web-projects/starter-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar dfareporting_v3_3;\n\n(function (dfareporting_v3_3) {\n  /**\n   * DCM/DFA Reporting And Trafficking API\n   *\n   * Manages your DoubleClick Campaign Manager ad campaigns and reports.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const dfareporting = google.dfareporting('v3.3');\n   *\n   * @namespace dfareporting\n   * @type {Function}\n   * @version v3.3\n   * @variation v3.3\n   * @param {object=} options Options for Dfareporting\n   */\n  var Dfareporting = function Dfareporting(options, google) {\n    _classCallCheck(this, Dfareporting);\n\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);\n    this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);\n    this.accountPermissions = new Resource$Accountpermissions(this.context);\n    this.accounts = new Resource$Accounts(this.context);\n    this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n    this.ads = new Resource$Ads(this.context);\n    this.advertiserGroups = new Resource$Advertisergroups(this.context);\n    this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);\n    this.advertisers = new Resource$Advertisers(this.context);\n    this.browsers = new Resource$Browsers(this.context);\n    this.campaignCreativeAssociations = new Resource$Campaigncreativeassociations(this.context);\n    this.campaigns = new Resource$Campaigns(this.context);\n    this.changeLogs = new Resource$Changelogs(this.context);\n    this.cities = new Resource$Cities(this.context);\n    this.connectionTypes = new Resource$Connectiontypes(this.context);\n    this.contentCategories = new Resource$Contentcategories(this.context);\n    this.conversions = new Resource$Conversions(this.context);\n    this.countries = new Resource$Countries(this.context);\n    this.creativeAssets = new Resource$Creativeassets(this.context);\n    this.creativeFields = new Resource$Creativefields(this.context);\n    this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n    this.creativeGroups = new Resource$Creativegroups(this.context);\n    this.creatives = new Resource$Creatives(this.context);\n    this.dimensionValues = new Resource$Dimensionvalues(this.context);\n    this.directorySites = new Resource$Directorysites(this.context);\n    this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);\n    this.eventTags = new Resource$Eventtags(this.context);\n    this.files = new Resource$Files(this.context);\n    this.floodlightActivities = new Resource$Floodlightactivities(this.context);\n    this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);\n    this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);\n    this.inventoryItems = new Resource$Inventoryitems(this.context);\n    this.languages = new Resource$Languages(this.context);\n    this.metros = new Resource$Metros(this.context);\n    this.mobileApps = new Resource$Mobileapps(this.context);\n    this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n    this.operatingSystems = new Resource$Operatingsystems(this.context);\n    this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);\n    this.orderDocuments = new Resource$Orderdocuments(this.context);\n    this.orders = new Resource$Orders(this.context);\n    this.placementGroups = new Resource$Placementgroups(this.context);\n    this.placements = new Resource$Placements(this.context);\n    this.placementStrategies = new Resource$Placementstrategies(this.context);\n    this.platformTypes = new Resource$Platformtypes(this.context);\n    this.postalCodes = new Resource$Postalcodes(this.context);\n    this.projects = new Resource$Projects(this.context);\n    this.regions = new Resource$Regions(this.context);\n    this.remarketingLists = new Resource$Remarketinglists(this.context);\n    this.remarketingListShares = new Resource$Remarketinglistshares(this.context);\n    this.reports = new Resource$Reports(this.context);\n    this.sites = new Resource$Sites(this.context);\n    this.sizes = new Resource$Sizes(this.context);\n    this.subaccounts = new Resource$Subaccounts(this.context);\n    this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);\n    this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n    this.userProfiles = new Resource$Userprofiles(this.context);\n    this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);\n    this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n    this.userRoles = new Resource$Userroles(this.context);\n    this.videoFormats = new Resource$Videoformats(this.context);\n  };\n\n  dfareporting_v3_3.Dfareporting = Dfareporting;\n\n  var Resource$Accountactiveadsummaries = /*#__PURE__*/function () {\n    function Resource$Accountactiveadsummaries(context) {\n      _classCallCheck(this, Resource$Accountactiveadsummaries);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountactiveadsummaries, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'summaryAccountId'],\n          pathParams: ['profileId', 'summaryAccountId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountactiveadsummaries;\n  }();\n\n  dfareporting_v3_3.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n\n  var Resource$Accountpermissiongroups = /*#__PURE__*/function () {\n    function Resource$Accountpermissiongroups(context) {\n      _classCallCheck(this, Resource$Accountpermissiongroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountpermissiongroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountpermissiongroups;\n  }();\n\n  dfareporting_v3_3.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n\n  var Resource$Accountpermissions = /*#__PURE__*/function () {\n    function Resource$Accountpermissions(context) {\n      _classCallCheck(this, Resource$Accountpermissions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountpermissions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountpermissions;\n  }();\n\n  dfareporting_v3_3.Resource$Accountpermissions = Resource$Accountpermissions;\n\n  var Resource$Accounts = /*#__PURE__*/function () {\n    function Resource$Accounts(context) {\n      _classCallCheck(this, Resource$Accounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts;\n  }();\n\n  dfareporting_v3_3.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accountuserprofiles = /*#__PURE__*/function () {\n    function Resource$Accountuserprofiles(context) {\n      _classCallCheck(this, Resource$Accountuserprofiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountuserprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountuserprofiles;\n  }();\n\n  dfareporting_v3_3.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n\n  var Resource$Ads = /*#__PURE__*/function () {\n    function Resource$Ads(context) {\n      _classCallCheck(this, Resource$Ads);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Ads, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Ads;\n  }();\n\n  dfareporting_v3_3.Resource$Ads = Resource$Ads;\n\n  var Resource$Advertisergroups = /*#__PURE__*/function () {\n    function Resource$Advertisergroups(context) {\n      _classCallCheck(this, Resource$Advertisergroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisergroups, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisergroups;\n  }();\n\n  dfareporting_v3_3.Resource$Advertisergroups = Resource$Advertisergroups;\n\n  var Resource$Advertiserlandingpages = /*#__PURE__*/function () {\n    function Resource$Advertiserlandingpages(context) {\n      _classCallCheck(this, Resource$Advertiserlandingpages);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertiserlandingpages, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertiserlandingpages;\n  }();\n\n  dfareporting_v3_3.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n\n  var Resource$Advertisers = /*#__PURE__*/function () {\n    function Resource$Advertisers(context) {\n      _classCallCheck(this, Resource$Advertisers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Advertisers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Advertisers;\n  }();\n\n  dfareporting_v3_3.Resource$Advertisers = Resource$Advertisers;\n\n  var Resource$Browsers = /*#__PURE__*/function () {\n    function Resource$Browsers(context) {\n      _classCallCheck(this, Resource$Browsers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Browsers, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/browsers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Browsers;\n  }();\n\n  dfareporting_v3_3.Resource$Browsers = Resource$Browsers;\n\n  var Resource$Campaigncreativeassociations = /*#__PURE__*/function () {\n    function Resource$Campaigncreativeassociations(context) {\n      _classCallCheck(this, Resource$Campaigncreativeassociations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Campaigncreativeassociations, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'campaignId'],\n          pathParams: ['campaignId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'campaignId'],\n          pathParams: ['campaignId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Campaigncreativeassociations;\n  }();\n\n  dfareporting_v3_3.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n\n  var Resource$Campaigns = /*#__PURE__*/function () {\n    function Resource$Campaigns(context) {\n      _classCallCheck(this, Resource$Campaigns);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Campaigns, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Campaigns;\n  }();\n\n  dfareporting_v3_3.Resource$Campaigns = Resource$Campaigns;\n\n  var Resource$Changelogs = /*#__PURE__*/function () {\n    function Resource$Changelogs(context) {\n      _classCallCheck(this, Resource$Changelogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Changelogs, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/changeLogs').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Changelogs;\n  }();\n\n  dfareporting_v3_3.Resource$Changelogs = Resource$Changelogs;\n\n  var Resource$Cities = /*#__PURE__*/function () {\n    function Resource$Cities(context) {\n      _classCallCheck(this, Resource$Cities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Cities, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/cities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Cities;\n  }();\n\n  dfareporting_v3_3.Resource$Cities = Resource$Cities;\n\n  var Resource$Connectiontypes = /*#__PURE__*/function () {\n    function Resource$Connectiontypes(context) {\n      _classCallCheck(this, Resource$Connectiontypes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Connectiontypes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/connectionTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Connectiontypes;\n  }();\n\n  dfareporting_v3_3.Resource$Connectiontypes = Resource$Connectiontypes;\n\n  var Resource$Contentcategories = /*#__PURE__*/function () {\n    function Resource$Contentcategories(context) {\n      _classCallCheck(this, Resource$Contentcategories);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Contentcategories, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Contentcategories;\n  }();\n\n  dfareporting_v3_3.Resource$Contentcategories = Resource$Contentcategories;\n\n  var Resource$Conversions = /*#__PURE__*/function () {\n    function Resource$Conversions(context) {\n      _classCallCheck(this, Resource$Conversions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Conversions, [{\n      key: \"batchinsert\",\n      value: function batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"batchupdate\",\n      value: function batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Conversions;\n  }();\n\n  dfareporting_v3_3.Resource$Conversions = Resource$Conversions;\n\n  var Resource$Countries = /*#__PURE__*/function () {\n    function Resource$Countries(context) {\n      _classCallCheck(this, Resource$Countries);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Countries, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'dartId'],\n          pathParams: ['dartId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/countries').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Countries;\n  }();\n\n  dfareporting_v3_3.Resource$Countries = Resource$Countries;\n\n  var Resource$Creativeassets = /*#__PURE__*/function () {\n    function Resource$Creativeassets(context) {\n      _classCallCheck(this, Resource$Creativeassets);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativeassets, [{\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          mediaUrl: (rootUrl + '/upload/dfareporting/v3.3/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['advertiserId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativeassets;\n  }();\n\n  dfareporting_v3_3.Resource$Creativeassets = Resource$Creativeassets;\n\n  var Resource$Creativefields = /*#__PURE__*/function () {\n    function Resource$Creativefields(context) {\n      _classCallCheck(this, Resource$Creativefields);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativefields, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativefields;\n  }();\n\n  dfareporting_v3_3.Resource$Creativefields = Resource$Creativefields;\n\n  var Resource$Creativefieldvalues = /*#__PURE__*/function () {\n    function Resource$Creativefieldvalues(context) {\n      _classCallCheck(this, Resource$Creativefieldvalues);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativefieldvalues, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'creativeFieldId', 'id'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'creativeFieldId'],\n          pathParams: ['creativeFieldId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativefieldvalues;\n  }();\n\n  dfareporting_v3_3.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n\n  var Resource$Creativegroups = /*#__PURE__*/function () {\n    function Resource$Creativegroups(context) {\n      _classCallCheck(this, Resource$Creativegroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creativegroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creativegroups;\n  }();\n\n  dfareporting_v3_3.Resource$Creativegroups = Resource$Creativegroups;\n\n  var Resource$Creatives = /*#__PURE__*/function () {\n    function Resource$Creatives(context) {\n      _classCallCheck(this, Resource$Creatives);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Creatives, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Creatives;\n  }();\n\n  dfareporting_v3_3.Resource$Creatives = Resource$Creatives;\n\n  var Resource$Dimensionvalues = /*#__PURE__*/function () {\n    function Resource$Dimensionvalues(context) {\n      _classCallCheck(this, Resource$Dimensionvalues);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Dimensionvalues, [{\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Dimensionvalues;\n  }();\n\n  dfareporting_v3_3.Resource$Dimensionvalues = Resource$Dimensionvalues;\n\n  var Resource$Directorysites = /*#__PURE__*/function () {\n    function Resource$Directorysites(context) {\n      _classCallCheck(this, Resource$Directorysites);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Directorysites, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Directorysites;\n  }();\n\n  dfareporting_v3_3.Resource$Directorysites = Resource$Directorysites;\n\n  var Resource$Dynamictargetingkeys = /*#__PURE__*/function () {\n    function Resource$Dynamictargetingkeys(context) {\n      _classCallCheck(this, Resource$Dynamictargetingkeys);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Dynamictargetingkeys, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n          pathParams: ['objectId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Dynamictargetingkeys;\n  }();\n\n  dfareporting_v3_3.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n\n  var Resource$Eventtags = /*#__PURE__*/function () {\n    function Resource$Eventtags(context) {\n      _classCallCheck(this, Resource$Eventtags);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Eventtags, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Eventtags;\n  }();\n\n  dfareporting_v3_3.Resource$Eventtags = Resource$Eventtags;\n\n  var Resource$Files = /*#__PURE__*/function () {\n    function Resource$Files(context) {\n      _classCallCheck(this, Resource$Files);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Files, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['reportId', 'fileId'],\n          pathParams: ['fileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Files;\n  }();\n\n  dfareporting_v3_3.Resource$Files = Resource$Files;\n\n  var Resource$Floodlightactivities = /*#__PURE__*/function () {\n    function Resource$Floodlightactivities(context) {\n      _classCallCheck(this, Resource$Floodlightactivities);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightactivities, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"generatetag\",\n      value: function generatetag(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightactivities;\n  }();\n\n  dfareporting_v3_3.Resource$Floodlightactivities = Resource$Floodlightactivities;\n\n  var Resource$Floodlightactivitygroups = /*#__PURE__*/function () {\n    function Resource$Floodlightactivitygroups(context) {\n      _classCallCheck(this, Resource$Floodlightactivitygroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightactivitygroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightactivitygroups;\n  }();\n\n  dfareporting_v3_3.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n\n  var Resource$Floodlightconfigurations = /*#__PURE__*/function () {\n    function Resource$Floodlightconfigurations(context) {\n      _classCallCheck(this, Resource$Floodlightconfigurations);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Floodlightconfigurations, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Floodlightconfigurations;\n  }();\n\n  dfareporting_v3_3.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n\n  var Resource$Inventoryitems = /*#__PURE__*/function () {\n    function Resource$Inventoryitems(context) {\n      _classCallCheck(this, Resource$Inventoryitems);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Inventoryitems, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Inventoryitems;\n  }();\n\n  dfareporting_v3_3.Resource$Inventoryitems = Resource$Inventoryitems;\n\n  var Resource$Languages = /*#__PURE__*/function () {\n    function Resource$Languages(context) {\n      _classCallCheck(this, Resource$Languages);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Languages, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/languages').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Languages;\n  }();\n\n  dfareporting_v3_3.Resource$Languages = Resource$Languages;\n\n  var Resource$Metros = /*#__PURE__*/function () {\n    function Resource$Metros(context) {\n      _classCallCheck(this, Resource$Metros);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Metros, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/metros').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Metros;\n  }();\n\n  dfareporting_v3_3.Resource$Metros = Resource$Metros;\n\n  var Resource$Mobileapps = /*#__PURE__*/function () {\n    function Resource$Mobileapps(context) {\n      _classCallCheck(this, Resource$Mobileapps);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mobileapps, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileApps').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mobileapps;\n  }();\n\n  dfareporting_v3_3.Resource$Mobileapps = Resource$Mobileapps;\n\n  var Resource$Mobilecarriers = /*#__PURE__*/function () {\n    function Resource$Mobilecarriers(context) {\n      _classCallCheck(this, Resource$Mobilecarriers);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Mobilecarriers, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Mobilecarriers;\n  }();\n\n  dfareporting_v3_3.Resource$Mobilecarriers = Resource$Mobilecarriers;\n\n  var Resource$Operatingsystems = /*#__PURE__*/function () {\n    function Resource$Operatingsystems(context) {\n      _classCallCheck(this, Resource$Operatingsystems);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Operatingsystems, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'dartId'],\n          pathParams: ['dartId', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operatingsystems;\n  }();\n\n  dfareporting_v3_3.Resource$Operatingsystems = Resource$Operatingsystems;\n\n  var Resource$Operatingsystemversions = /*#__PURE__*/function () {\n    function Resource$Operatingsystemversions(context) {\n      _classCallCheck(this, Resource$Operatingsystemversions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Operatingsystemversions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operatingsystemversions;\n  }();\n\n  dfareporting_v3_3.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n\n  var Resource$Orderdocuments = /*#__PURE__*/function () {\n    function Resource$Orderdocuments(context) {\n      _classCallCheck(this, Resource$Orderdocuments);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderdocuments, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderdocuments;\n  }();\n\n  dfareporting_v3_3.Resource$Orderdocuments = Resource$Orderdocuments;\n\n  var Resource$Orders = /*#__PURE__*/function () {\n    function Resource$Orders(context) {\n      _classCallCheck(this, Resource$Orders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orders, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'projectId', 'id'],\n          pathParams: ['id', 'profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'projectId'],\n          pathParams: ['profileId', 'projectId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orders;\n  }();\n\n  dfareporting_v3_3.Resource$Orders = Resource$Orders;\n\n  var Resource$Placementgroups = /*#__PURE__*/function () {\n    function Resource$Placementgroups(context) {\n      _classCallCheck(this, Resource$Placementgroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placementgroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placementgroups;\n  }();\n\n  dfareporting_v3_3.Resource$Placementgroups = Resource$Placementgroups;\n\n  var Resource$Placements = /*#__PURE__*/function () {\n    function Resource$Placements(context) {\n      _classCallCheck(this, Resource$Placements);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placements, [{\n      key: \"generatetags\",\n      value: function generatetags(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placements;\n  }();\n\n  dfareporting_v3_3.Resource$Placements = Resource$Placements;\n\n  var Resource$Placementstrategies = /*#__PURE__*/function () {\n    function Resource$Placementstrategies(context) {\n      _classCallCheck(this, Resource$Placementstrategies);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Placementstrategies, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Placementstrategies;\n  }();\n\n  dfareporting_v3_3.Resource$Placementstrategies = Resource$Placementstrategies;\n\n  var Resource$Platformtypes = /*#__PURE__*/function () {\n    function Resource$Platformtypes(context) {\n      _classCallCheck(this, Resource$Platformtypes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Platformtypes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/platformTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Platformtypes;\n  }();\n\n  dfareporting_v3_3.Resource$Platformtypes = Resource$Platformtypes;\n\n  var Resource$Postalcodes = /*#__PURE__*/function () {\n    function Resource$Postalcodes(context) {\n      _classCallCheck(this, Resource$Postalcodes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Postalcodes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'code'],\n          pathParams: ['code', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/postalCodes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Postalcodes;\n  }();\n\n  dfareporting_v3_3.Resource$Postalcodes = Resource$Postalcodes;\n\n  var Resource$Projects = /*#__PURE__*/function () {\n    function Resource$Projects(context) {\n      _classCallCheck(this, Resource$Projects);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects;\n  }();\n\n  dfareporting_v3_3.Resource$Projects = Resource$Projects;\n\n  var Resource$Regions = /*#__PURE__*/function () {\n    function Resource$Regions(context) {\n      _classCallCheck(this, Resource$Regions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Regions, [{\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Regions;\n  }();\n\n  dfareporting_v3_3.Resource$Regions = Resource$Regions;\n\n  var Resource$Remarketinglists = /*#__PURE__*/function () {\n    function Resource$Remarketinglists(context) {\n      _classCallCheck(this, Resource$Remarketinglists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Remarketinglists, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Remarketinglists;\n  }();\n\n  dfareporting_v3_3.Resource$Remarketinglists = Resource$Remarketinglists;\n\n  var Resource$Remarketinglistshares = /*#__PURE__*/function () {\n    function Resource$Remarketinglistshares(context) {\n      _classCallCheck(this, Resource$Remarketinglistshares);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Remarketinglistshares, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'remarketingListId'],\n          pathParams: ['profileId', 'remarketingListId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'remarketingListId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Remarketinglistshares;\n  }();\n\n  dfareporting_v3_3.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n\n  var Resource$Reports = /*#__PURE__*/function () {\n    function Resource$Reports(context) {\n      _classCallCheck(this, Resource$Reports);\n\n      this.context = context;\n      this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);\n      this.files = new Resource$Reports$Files(this.context);\n    }\n\n    _createClass(Resource$Reports, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"run\",\n      value: function run(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports;\n  }();\n\n  dfareporting_v3_3.Resource$Reports = Resource$Reports;\n\n  var Resource$Reports$Compatiblefields = /*#__PURE__*/function () {\n    function Resource$Reports$Compatiblefields(context) {\n      _classCallCheck(this, Resource$Reports$Compatiblefields);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reports$Compatiblefields, [{\n      key: \"query\",\n      value: function query(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports$Compatiblefields;\n  }();\n\n  dfareporting_v3_3.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n\n  var Resource$Reports$Files = /*#__PURE__*/function () {\n    function Resource$Reports$Files(context) {\n      _classCallCheck(this, Resource$Reports$Files);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Reports$Files, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'reportId', 'fileId'],\n          pathParams: ['fileId', 'profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'reportId'],\n          pathParams: ['profileId', 'reportId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reports$Files;\n  }();\n\n  dfareporting_v3_3.Resource$Reports$Files = Resource$Reports$Files;\n\n  var Resource$Sites = /*#__PURE__*/function () {\n    function Resource$Sites(context) {\n      _classCallCheck(this, Resource$Sites);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sites, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sites;\n  }();\n\n  dfareporting_v3_3.Resource$Sites = Resource$Sites;\n\n  var Resource$Sizes = /*#__PURE__*/function () {\n    function Resource$Sizes(context) {\n      _classCallCheck(this, Resource$Sizes);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Sizes, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Sizes;\n  }();\n\n  dfareporting_v3_3.Resource$Sizes = Resource$Sizes;\n\n  var Resource$Subaccounts = /*#__PURE__*/function () {\n    function Resource$Subaccounts(context) {\n      _classCallCheck(this, Resource$Subaccounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Subaccounts, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Subaccounts;\n  }();\n\n  dfareporting_v3_3.Resource$Subaccounts = Resource$Subaccounts;\n\n  var Resource$Targetableremarketinglists = /*#__PURE__*/function () {\n    function Resource$Targetableremarketinglists(context) {\n      _classCallCheck(this, Resource$Targetableremarketinglists);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Targetableremarketinglists, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'advertiserId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Targetableremarketinglists;\n  }();\n\n  dfareporting_v3_3.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n\n  var Resource$Targetingtemplates = /*#__PURE__*/function () {\n    function Resource$Targetingtemplates(context) {\n      _classCallCheck(this, Resource$Targetingtemplates);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Targetingtemplates, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Targetingtemplates;\n  }();\n\n  dfareporting_v3_3.Resource$Targetingtemplates = Resource$Targetingtemplates;\n\n  var Resource$Userprofiles = /*#__PURE__*/function () {\n    function Resource$Userprofiles(context) {\n      _classCallCheck(this, Resource$Userprofiles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userprofiles, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles;\n  }();\n\n  dfareporting_v3_3.Resource$Userprofiles = Resource$Userprofiles;\n\n  var Resource$Userrolepermissiongroups = /*#__PURE__*/function () {\n    function Resource$Userrolepermissiongroups(context) {\n      _classCallCheck(this, Resource$Userrolepermissiongroups);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userrolepermissiongroups, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userrolepermissiongroups;\n  }();\n\n  dfareporting_v3_3.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n\n  var Resource$Userrolepermissions = /*#__PURE__*/function () {\n    function Resource$Userrolepermissions(context) {\n      _classCallCheck(this, Resource$Userrolepermissions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userrolepermissions, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userrolepermissions;\n  }();\n\n  dfareporting_v3_3.Resource$Userrolepermissions = Resource$Userrolepermissions;\n\n  var Resource$Userroles = /*#__PURE__*/function () {\n    function Resource$Userroles(context) {\n      _classCallCheck(this, Resource$Userroles);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Userroles, [{\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userroles;\n  }();\n\n  dfareporting_v3_3.Resource$Userroles = Resource$Userroles;\n\n  var Resource$Videoformats = /*#__PURE__*/function () {\n    function Resource$Videoformats(context) {\n      _classCallCheck(this, Resource$Videoformats);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Videoformats, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId', 'id'],\n          pathParams: ['id', 'profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/videoFormats').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['profileId'],\n          pathParams: ['profileId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Videoformats;\n  }();\n\n  dfareporting_v3_3.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v3_3 = exports.dfareporting_v3_3 || (exports.dfareporting_v3_3 = {}));","map":{"version":3,"sources":["/home/vitor/web-projects/starter-project/node_modules/googleapis/build/src/apis/dfareporting/v3.3.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","dfareporting_v3_3","Dfareporting","options","google","context","_options","accountActiveAdSummaries","Resource$Accountactiveadsummaries","accountPermissionGroups","Resource$Accountpermissiongroups","accountPermissions","Resource$Accountpermissions","accounts","Resource$Accounts","accountUserProfiles","Resource$Accountuserprofiles","ads","Resource$Ads","advertiserGroups","Resource$Advertisergroups","advertiserLandingPages","Resource$Advertiserlandingpages","advertisers","Resource$Advertisers","browsers","Resource$Browsers","campaignCreativeAssociations","Resource$Campaigncreativeassociations","campaigns","Resource$Campaigns","changeLogs","Resource$Changelogs","cities","Resource$Cities","connectionTypes","Resource$Connectiontypes","contentCategories","Resource$Contentcategories","conversions","Resource$Conversions","countries","Resource$Countries","creativeAssets","Resource$Creativeassets","creativeFields","Resource$Creativefields","creativeFieldValues","Resource$Creativefieldvalues","creativeGroups","Resource$Creativegroups","creatives","Resource$Creatives","dimensionValues","Resource$Dimensionvalues","directorySites","Resource$Directorysites","dynamicTargetingKeys","Resource$Dynamictargetingkeys","eventTags","Resource$Eventtags","files","Resource$Files","floodlightActivities","Resource$Floodlightactivities","floodlightActivityGroups","Resource$Floodlightactivitygroups","floodlightConfigurations","Resource$Floodlightconfigurations","inventoryItems","Resource$Inventoryitems","languages","Resource$Languages","metros","Resource$Metros","mobileApps","Resource$Mobileapps","mobileCarriers","Resource$Mobilecarriers","operatingSystems","Resource$Operatingsystems","operatingSystemVersions","Resource$Operatingsystemversions","orderDocuments","Resource$Orderdocuments","orders","Resource$Orders","placementGroups","Resource$Placementgroups","placements","Resource$Placements","placementStrategies","Resource$Placementstrategies","platformTypes","Resource$Platformtypes","postalCodes","Resource$Postalcodes","projects","Resource$Projects","regions","Resource$Regions","remarketingLists","Resource$Remarketinglists","remarketingListShares","Resource$Remarketinglistshares","reports","Resource$Reports","sites","Resource$Sites","sizes","Resource$Sizes","subaccounts","Resource$Subaccounts","targetableRemarketingLists","Resource$Targetableremarketinglists","targetingTemplates","Resource$Targetingtemplates","userProfiles","Resource$Userprofiles","userRolePermissionGroups","Resource$Userrolepermissiongroups","userRolePermissions","Resource$Userrolepermissions","userRoles","Resource$Userroles","videoFormats","Resource$Videoformats","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","mediaUrl","compatibleFields","Resource$Reports$Compatiblefields","Resource$Reports$Files"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar dfareporting_v3_3;\n(function (dfareporting_v3_3) {\n    /**\n     * DCM/DFA Reporting And Trafficking API\n     *\n     * Manages your DoubleClick Campaign Manager ad campaigns and reports.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const dfareporting = google.dfareporting('v3.3');\n     *\n     * @namespace dfareporting\n     * @type {Function}\n     * @version v3.3\n     * @variation v3.3\n     * @param {object=} options Options for Dfareporting\n     */\n    class Dfareporting {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.accountActiveAdSummaries =\n                new Resource$Accountactiveadsummaries(this.context);\n            this.accountPermissionGroups =\n                new Resource$Accountpermissiongroups(this.context);\n            this.accountPermissions = new Resource$Accountpermissions(this.context);\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n            this.ads = new Resource$Ads(this.context);\n            this.advertiserGroups = new Resource$Advertisergroups(this.context);\n            this.advertiserLandingPages =\n                new Resource$Advertiserlandingpages(this.context);\n            this.advertisers = new Resource$Advertisers(this.context);\n            this.browsers = new Resource$Browsers(this.context);\n            this.campaignCreativeAssociations =\n                new Resource$Campaigncreativeassociations(this.context);\n            this.campaigns = new Resource$Campaigns(this.context);\n            this.changeLogs = new Resource$Changelogs(this.context);\n            this.cities = new Resource$Cities(this.context);\n            this.connectionTypes = new Resource$Connectiontypes(this.context);\n            this.contentCategories = new Resource$Contentcategories(this.context);\n            this.conversions = new Resource$Conversions(this.context);\n            this.countries = new Resource$Countries(this.context);\n            this.creativeAssets = new Resource$Creativeassets(this.context);\n            this.creativeFields = new Resource$Creativefields(this.context);\n            this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n            this.creativeGroups = new Resource$Creativegroups(this.context);\n            this.creatives = new Resource$Creatives(this.context);\n            this.dimensionValues = new Resource$Dimensionvalues(this.context);\n            this.directorySites = new Resource$Directorysites(this.context);\n            this.dynamicTargetingKeys =\n                new Resource$Dynamictargetingkeys(this.context);\n            this.eventTags = new Resource$Eventtags(this.context);\n            this.files = new Resource$Files(this.context);\n            this.floodlightActivities =\n                new Resource$Floodlightactivities(this.context);\n            this.floodlightActivityGroups =\n                new Resource$Floodlightactivitygroups(this.context);\n            this.floodlightConfigurations =\n                new Resource$Floodlightconfigurations(this.context);\n            this.inventoryItems = new Resource$Inventoryitems(this.context);\n            this.languages = new Resource$Languages(this.context);\n            this.metros = new Resource$Metros(this.context);\n            this.mobileApps = new Resource$Mobileapps(this.context);\n            this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n            this.operatingSystems = new Resource$Operatingsystems(this.context);\n            this.operatingSystemVersions =\n                new Resource$Operatingsystemversions(this.context);\n            this.orderDocuments = new Resource$Orderdocuments(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.placementGroups = new Resource$Placementgroups(this.context);\n            this.placements = new Resource$Placements(this.context);\n            this.placementStrategies = new Resource$Placementstrategies(this.context);\n            this.platformTypes = new Resource$Platformtypes(this.context);\n            this.postalCodes = new Resource$Postalcodes(this.context);\n            this.projects = new Resource$Projects(this.context);\n            this.regions = new Resource$Regions(this.context);\n            this.remarketingLists = new Resource$Remarketinglists(this.context);\n            this.remarketingListShares =\n                new Resource$Remarketinglistshares(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.sites = new Resource$Sites(this.context);\n            this.sizes = new Resource$Sizes(this.context);\n            this.subaccounts = new Resource$Subaccounts(this.context);\n            this.targetableRemarketingLists =\n                new Resource$Targetableremarketinglists(this.context);\n            this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n            this.userProfiles = new Resource$Userprofiles(this.context);\n            this.userRolePermissionGroups =\n                new Resource$Userrolepermissiongroups(this.context);\n            this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n            this.userRoles = new Resource$Userroles(this.context);\n            this.videoFormats = new Resource$Videoformats(this.context);\n        }\n    }\n    dfareporting_v3_3.Dfareporting = Dfareporting;\n    class Resource$Accountactiveadsummaries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'summaryAccountId'],\n                pathParams: ['profileId', 'summaryAccountId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n    class Resource$Accountpermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissionGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissionGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n    class Resource$Accountpermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissions/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accountpermissions = Resource$Accountpermissions;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accounts/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accounts = Resource$Accounts;\n    class Resource$Accountuserprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n    class Resource$Ads {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/ads/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Ads = Resource$Ads;\n    class Resource$Advertisergroups {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Advertisergroups = Resource$Advertisergroups;\n    class Resource$Advertiserlandingpages {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n    class Resource$Advertisers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Advertisers = Resource$Advertisers;\n    class Resource$Browsers {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/browsers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Browsers = Resource$Browsers;\n    class Resource$Campaigncreativeassociations {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n    class Resource$Campaigns {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Campaigns = Resource$Campaigns;\n    class Resource$Changelogs {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/changeLogs/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/changeLogs')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Changelogs = Resource$Changelogs;\n    class Resource$Cities {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/cities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Cities = Resource$Cities;\n    class Resource$Connectiontypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/connectionTypes/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/connectionTypes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Connectiontypes = Resource$Connectiontypes;\n    class Resource$Contentcategories {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Contentcategories = Resource$Contentcategories;\n    class Resource$Conversions {\n        constructor(context) {\n            this.context = context;\n        }\n        batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/conversions/batchinsert')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/conversions/batchupdate')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Conversions = Resource$Conversions;\n    class Resource$Countries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/countries/{dartId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/countries')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Countries = Resource$Countries;\n    class Resource$Creativeassets {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/dfareporting/v3.3/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets')\n                    .replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['advertiserId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creativeassets = Resource$Creativeassets;\n    class Resource$Creativefields {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creativefields = Resource$Creativefields;\n    class Resource$Creativefieldvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n    class Resource$Creativegroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creativegroups = Resource$Creativegroups;\n    class Resource$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creatives/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creatives')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creatives = Resource$Creatives;\n    class Resource$Dimensionvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/dimensionvalues/query')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Dimensionvalues = Resource$Dimensionvalues;\n    class Resource$Directorysites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/directorySites/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/directorySites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/directorySites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Directorysites = Resource$Directorysites;\n    class Resource$Dynamictargetingkeys {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n                pathParams: ['objectId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n    class Resource$Eventtags {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/eventTags/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/eventTags/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/eventTags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/eventTags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/eventTags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/eventTags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Eventtags = Resource$Eventtags;\n    class Resource$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/reports/{reportId}/files/{fileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['reportId', 'fileId'],\n                pathParams: ['fileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/files')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Files = Resource$Files;\n    class Resource$Floodlightactivities {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        generatetag(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/generatetag')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Floodlightactivities = Resource$Floodlightactivities;\n    class Resource$Floodlightactivitygroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n    class Resource$Floodlightconfigurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n    class Resource$Inventoryitems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/inventoryItems')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Inventoryitems = Resource$Inventoryitems;\n    class Resource$Languages {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/languages')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Languages = Resource$Languages;\n    class Resource$Metros {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/metros')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Metros = Resource$Metros;\n    class Resource$Mobileapps {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/mobileApps/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/mobileApps')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Mobileapps = Resource$Mobileapps;\n    class Resource$Mobilecarriers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/mobileCarriers/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/mobileCarriers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Mobilecarriers = Resource$Mobilecarriers;\n    class Resource$Operatingsystems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystems/{dartId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystems')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Operatingsystems = Resource$Operatingsystems;\n    class Resource$Operatingsystemversions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystemVersions/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystemVersions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n    class Resource$Orderdocuments {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orderDocuments')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Orderdocuments = Resource$Orderdocuments;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orders/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orders')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Orders = Resource$Orders;\n    class Resource$Placementgroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Placementgroups = Resource$Placementgroups;\n    class Resource$Placements {\n        constructor(context) {\n            this.context = context;\n        }\n        generatetags(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placements/generatetags')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placements/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Placements = Resource$Placements;\n    class Resource$Placementstrategies {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Placementstrategies = Resource$Placementstrategies;\n    class Resource$Platformtypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/platformTypes/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/platformTypes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Platformtypes = Resource$Platformtypes;\n    class Resource$Postalcodes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/postalCodes/{code}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'code'],\n                pathParams: ['code', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/postalCodes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Postalcodes = Resource$Postalcodes;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Projects = Resource$Projects;\n    class Resource$Regions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/regions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Regions = Resource$Regions;\n    class Resource$Remarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Remarketinglists = Resource$Remarketinglists;\n    class Resource$Remarketinglistshares {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares/{remarketingListId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'remarketingListId'],\n                pathParams: ['profileId', 'remarketingListId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'remarketingListId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n            this.compatibleFields =\n                new Resource$Reports$Compatiblefields(this.context);\n            this.files = new Resource$Reports$Files(this.context);\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        run(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/run')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Reports = Resource$Reports;\n    class Resource$Reports$Compatiblefields {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/compatiblefields/query')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n    class Resource$Reports$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/files/{fileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId', 'fileId'],\n                pathParams: ['fileId', 'profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/files')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Reports$Files = Resource$Reports$Files;\n    class Resource$Sites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/sites/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/sites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/sites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/sites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/sites')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Sites = Resource$Sites;\n    class Resource$Sizes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/sizes/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/sizes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/sizes')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Sizes = Resource$Sizes;\n    class Resource$Subaccounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Subaccounts = Resource$Subaccounts;\n    class Resource$Targetableremarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetableRemarketingLists/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetableRemarketingLists')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n    class Resource$Targetingtemplates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Targetingtemplates = Resource$Targetingtemplates;\n    class Resource$Userprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Userprofiles = Resource$Userprofiles;\n    class Resource$Userrolepermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissionGroups/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissionGroups')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n    class Resource$Userrolepermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissions/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Userrolepermissions = Resource$Userrolepermissions;\n    class Resource$Userroles {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRoles/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRoles/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRoles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRoles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRoles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRoles')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Userroles = Resource$Userroles;\n    class Resource$Videoformats {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/videoFormats/{id}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/videoFormats')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v3_3 = exports.dfareporting_v3_3 || (exports.dfareporting_v3_3 = {}));\n//# sourceMappingURL=v3.3.js.map"]},"metadata":{},"sourceType":"script"}