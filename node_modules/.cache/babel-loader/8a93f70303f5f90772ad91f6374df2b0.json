{"ast":null,"code":"var _jsxFileName = \"/home/vitor/web-projects/starter-project/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; // const fs = require('fs');\n// const readline = require('readline');\n// const {google} = require('googleapis');\n// const SCOPES = ['https://www.googleapis.com/auth/drive.metadata.readonly'];\n// const TOKEN_PATH = 'token-sheet-music.json';\n// fs.readFile('credentials.json', (err, content) => {\n//   if (err) return console.log('Error loading client secret file:', err);\n//   // Authorize a client with credentials, then call the Google Drive API.\n//   authorize(JSON.parse(content), listFiles);\n// });\n// function authorize(credentials, callback) {\n//   const {client_secret, client_id, redirect_uris} = credentials.installed;\n//   const oAuth2Client = new google.auth.OAuth2(\n//       client_id, client_secret, redirect_uris[0]);\n//   // Check if we have previously stored a token.\n//   fs.readFile(TOKEN_PATH, (err, token) => {\n//     if (err) return getAccessToken(oAuth2Client, callback);\n//     oAuth2Client.setCredentials(JSON.parse(token));\n//     callback(oAuth2Client);\n//   });\n// }\n// function getAccessToken(oAuth2Client, callback) {\n//   const authUrl = oAuth2Client.generateAuthUrl({\n//     access_type: 'offline',\n//     scope: SCOPES,\n//   });\n//   console.log('Authorize this app by visiting this url:', authUrl);\n//   const rl = readline.createInterface({\n//     input: process.stdin,\n//     output: process.stdout,\n//   });\n//   rl.question('Enter the code from that page here: ', (code) => {\n//     rl.close();\n//     oAuth2Client.getToken(code, (err, token) => {\n//       if (err) return console.error('Error retrieving access token', err);\n//       oAuth2Client.setCredentials(token);\n//       // Store the token to disk for later program executions\n//       fs.writeFile(TOKEN_PATH, JSON.stringify(token), (err) => {\n//         if (err) return console.error(err);\n//         console.log('Token stored to', TOKEN_PATH);\n//       });\n//       callback(oAuth2Client);\n//     });\n//   });\n// }\n// function listFiles(auth) {\n//   const drive = google.drive({version: 'v3', auth});\n//   drive.files.list({\n//     pageSize: 10,\n//     fields: 'nextPageToken, files(id, name)',\n//   }, (err, res) => {\n//     if (err) return console.log('The API returned an error: ' + err);\n//     const files = res.data.files;\n//     if (files.length) {\n//       console.log('Files:');\n//       files.map((file) => {\n//         console.log(`${file.name} (${file.id})`);\n//       });\n//     } else {\n//       console.log('No files found.');\n//     }\n//   });\n// }\n// console.log('Funciona');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 85,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/vitor/web-projects/starter-project/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAKA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAH,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n// const fs = require('fs');\n// const readline = require('readline');\n// const {google} = require('googleapis');\n\n\n// const SCOPES = ['https://www.googleapis.com/auth/drive.metadata.readonly'];\n// const TOKEN_PATH = 'token-sheet-music.json';\n\n// fs.readFile('credentials.json', (err, content) => {\n//   if (err) return console.log('Error loading client secret file:', err);\n//   // Authorize a client with credentials, then call the Google Drive API.\n//   authorize(JSON.parse(content), listFiles);\n// });\n\n// function authorize(credentials, callback) {\n//   const {client_secret, client_id, redirect_uris} = credentials.installed;\n//   const oAuth2Client = new google.auth.OAuth2(\n//       client_id, client_secret, redirect_uris[0]);\n\n//   // Check if we have previously stored a token.\n//   fs.readFile(TOKEN_PATH, (err, token) => {\n//     if (err) return getAccessToken(oAuth2Client, callback);\n//     oAuth2Client.setCredentials(JSON.parse(token));\n//     callback(oAuth2Client);\n//   });\n// }\n\n// function getAccessToken(oAuth2Client, callback) {\n//   const authUrl = oAuth2Client.generateAuthUrl({\n//     access_type: 'offline',\n//     scope: SCOPES,\n//   });\n//   console.log('Authorize this app by visiting this url:', authUrl);\n//   const rl = readline.createInterface({\n//     input: process.stdin,\n//     output: process.stdout,\n//   });\n//   rl.question('Enter the code from that page here: ', (code) => {\n//     rl.close();\n//     oAuth2Client.getToken(code, (err, token) => {\n//       if (err) return console.error('Error retrieving access token', err);\n//       oAuth2Client.setCredentials(token);\n//       // Store the token to disk for later program executions\n//       fs.writeFile(TOKEN_PATH, JSON.stringify(token), (err) => {\n//         if (err) return console.error(err);\n//         console.log('Token stored to', TOKEN_PATH);\n//       });\n//       callback(oAuth2Client);\n//     });\n//   });\n// }\n\n// function listFiles(auth) {\n//   const drive = google.drive({version: 'v3', auth});\n//   drive.files.list({\n//     pageSize: 10,\n//     fields: 'nextPageToken, files(id, name)',\n//   }, (err, res) => {\n//     if (err) return console.log('The API returned an error: ' + err);\n//     const files = res.data.files;\n//     if (files.length) {\n//       console.log('Files:');\n//       files.map((file) => {\n//         console.log(`${file.name} (${file.id})`);\n//       });\n//     } else {\n//       console.log('No files found.');\n//     }\n//   });\n// }\n\n// console.log('Funciona');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}