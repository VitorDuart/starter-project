{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createClass = require(\"/home/vitor/web-projects/starter-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/home/vitor/web-projects/starter-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar content_v2_1;\n\n(function (content_v2_1) {\n  /**\n   * Content API for Shopping\n   *\n   * Manages product items, inventory, and Merchant Center accounts for Google\n   * Shopping.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const content = google.content('v2.1');\n   *\n   * @namespace content\n   * @type {Function}\n   * @version v2.1\n   * @variation v2.1\n   * @param {object=} options Options for Content\n   */\n  var Content = function Content(options, google) {\n    _classCallCheck(this, Content);\n\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.accounts = new Resource$Accounts(this.context);\n    this.accountstatuses = new Resource$Accountstatuses(this.context);\n    this.accounttax = new Resource$Accounttax(this.context);\n    this.datafeeds = new Resource$Datafeeds(this.context);\n    this.datafeedstatuses = new Resource$Datafeedstatuses(this.context);\n    this.liasettings = new Resource$Liasettings(this.context);\n    this.orderinvoices = new Resource$Orderinvoices(this.context);\n    this.orderreports = new Resource$Orderreports(this.context);\n    this.orderreturns = new Resource$Orderreturns(this.context);\n    this.orders = new Resource$Orders(this.context);\n    this.pos = new Resource$Pos(this.context);\n    this.products = new Resource$Products(this.context);\n    this.productstatuses = new Resource$Productstatuses(this.context);\n    this.regionalinventory = new Resource$Regionalinventory(this.context);\n    this.shippingsettings = new Resource$Shippingsettings(this.context);\n  };\n\n  content_v2_1.Content = Content;\n\n  var Resource$Accounts = /*#__PURE__*/function () {\n    function Resource$Accounts(context) {\n      _classCallCheck(this, Resource$Accounts);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts, [{\n      key: \"authinfo\",\n      value: function authinfo(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounts/authinfo').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"claimwebsite\",\n      value: function claimwebsite(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/claimwebsite').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounts/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"link\",\n      value: function link(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/link').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts;\n  }();\n\n  content_v2_1.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accountstatuses = /*#__PURE__*/function () {\n    function Resource$Accountstatuses(context) {\n      _classCallCheck(this, Resource$Accountstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accountstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accountstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accountstatuses;\n  }();\n\n  content_v2_1.Resource$Accountstatuses = Resource$Accountstatuses;\n\n  var Resource$Accounttax = /*#__PURE__*/function () {\n    function Resource$Accounttax(context) {\n      _classCallCheck(this, Resource$Accounttax);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounttax, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/accounttax/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounttax').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounttax;\n  }();\n\n  content_v2_1.Resource$Accounttax = Resource$Accounttax;\n\n  var Resource$Datafeeds = /*#__PURE__*/function () {\n    function Resource$Datafeeds(context) {\n      _classCallCheck(this, Resource$Datafeeds);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Datafeeds, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/datafeeds/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"fetchnow\",\n      value: function fetchnow(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}/fetchNow').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Datafeeds;\n  }();\n\n  content_v2_1.Resource$Datafeeds = Resource$Datafeeds;\n\n  var Resource$Datafeedstatuses = /*#__PURE__*/function () {\n    function Resource$Datafeedstatuses(context) {\n      _classCallCheck(this, Resource$Datafeedstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Datafeedstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/datafeedstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'datafeedId'],\n          pathParams: ['datafeedId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Datafeedstatuses;\n  }();\n\n  content_v2_1.Resource$Datafeedstatuses = Resource$Datafeedstatuses;\n\n  var Resource$Liasettings = /*#__PURE__*/function () {\n    function Resource$Liasettings(context) {\n      _classCallCheck(this, Resource$Liasettings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Liasettings, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/liasettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getaccessiblegmbaccounts\",\n      value: function getaccessiblegmbaccounts(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listposdataproviders\",\n      value: function listposdataproviders(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/liasettings/posdataproviders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"requestgmbaccess\",\n      value: function requestgmbaccess(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/requestgmbaccess').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId', 'gmbEmail'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"requestinventoryverification\",\n      value: function requestinventoryverification(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId', 'country'],\n          pathParams: ['accountId', 'country', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setinventoryverificationcontact\",\n      value: function setinventoryverificationcontact(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId', 'contactEmail', 'contactName', 'country', 'language'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setposdataprovider\",\n      value: function setposdataprovider(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/setposdataprovider').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId', 'country'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Liasettings;\n  }();\n\n  content_v2_1.Resource$Liasettings = Resource$Liasettings;\n\n  var Resource$Orderinvoices = /*#__PURE__*/function () {\n    function Resource$Orderinvoices(context) {\n      _classCallCheck(this, Resource$Orderinvoices);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderinvoices, [{\n      key: \"createchargeinvoice\",\n      value: function createchargeinvoice(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createChargeInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createrefundinvoice\",\n      value: function createrefundinvoice(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createRefundInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderinvoices;\n  }();\n\n  content_v2_1.Resource$Orderinvoices = Resource$Orderinvoices;\n\n  var Resource$Orderreports = /*#__PURE__*/function () {\n    function Resource$Orderreports(context) {\n      _classCallCheck(this, Resource$Orderreports);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderreports, [{\n      key: \"listdisbursements\",\n      value: function listdisbursements(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreports/disbursements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'disbursementStartDate'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"listtransactions\",\n      value: function listtransactions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreports/disbursements/{disbursementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'disbursementId', 'transactionStartDate'],\n          pathParams: ['disbursementId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderreports;\n  }();\n\n  content_v2_1.Resource$Orderreports = Resource$Orderreports;\n\n  var Resource$Orderreturns = /*#__PURE__*/function () {\n    function Resource$Orderreturns(context) {\n      _classCallCheck(this, Resource$Orderreturns);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orderreturns, [{\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'returnId'],\n          pathParams: ['merchantId', 'returnId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orderreturns;\n  }();\n\n  content_v2_1.Resource$Orderreturns = Resource$Orderreturns;\n\n  var Resource$Orders = /*#__PURE__*/function () {\n    function Resource$Orders(context) {\n      _classCallCheck(this, Resource$Orders);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Orders, [{\n      key: \"acknowledge\",\n      value: function acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"advancetestorder\",\n      value: function advancetestorder(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/testorders/{orderId}/advance').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"cancellineitem\",\n      value: function cancellineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/cancelLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"canceltestorderbycustomer\",\n      value: function canceltestorderbycustomer(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/testorders/{orderId}/cancelByCustomer').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createtestorder\",\n      value: function createtestorder(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/testorders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"createtestreturn\",\n      value: function createtestreturn(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/testreturn').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getbymerchantorderid\",\n      value: function getbymerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/ordersbymerchantid/{merchantOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'merchantOrderId'],\n          pathParams: ['merchantId', 'merchantOrderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"gettestordertemplate\",\n      value: function gettestordertemplate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/testordertemplates/{templateName}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'templateName'],\n          pathParams: ['merchantId', 'templateName'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"instorerefundlineitem\",\n      value: function instorerefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/inStoreRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"rejectreturnlineitem\",\n      value: function rejectreturnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/rejectReturnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"returnrefundlineitem\",\n      value: function returnrefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setlineitemmetadata\",\n      value: function setlineitemmetadata(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/setLineItemMetadata').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"shiplineitems\",\n      value: function shiplineitems(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/shipLineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updatelineitemshippingdetails\",\n      value: function updatelineitemshippingdetails(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateLineItemShippingDetails').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updatemerchantorderid\",\n      value: function updatemerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateMerchantOrderId').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"updateshipment\",\n      value: function updateshipment(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateShipment').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'orderId'],\n          pathParams: ['merchantId', 'orderId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Orders;\n  }();\n\n  content_v2_1.Resource$Orders = Resource$Orders;\n\n  var Resource$Pos = /*#__PURE__*/function () {\n    function Resource$Pos(context) {\n      _classCallCheck(this, Resource$Pos);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Pos, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/pos/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n          pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n          pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"inventory\",\n      value: function inventory(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/inventory').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"sale\",\n      value: function sale(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/sale').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'targetMerchantId'],\n          pathParams: ['merchantId', 'targetMerchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Pos;\n  }();\n\n  content_v2_1.Resource$Pos = Resource$Pos;\n\n  var Resource$Products = /*#__PURE__*/function () {\n    function Resource$Products(context) {\n      _classCallCheck(this, Resource$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Products, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/products/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Products;\n  }();\n\n  content_v2_1.Resource$Products = Resource$Products;\n\n  var Resource$Productstatuses = /*#__PURE__*/function () {\n    function Resource$Productstatuses(context) {\n      _classCallCheck(this, Resource$Productstatuses);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Productstatuses, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/productstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Productstatuses;\n  }();\n\n  content_v2_1.Resource$Productstatuses = Resource$Productstatuses;\n\n  var Resource$Regionalinventory = /*#__PURE__*/function () {\n    function Resource$Regionalinventory(context) {\n      _classCallCheck(this, Resource$Regionalinventory);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Regionalinventory, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/regionalinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"insert\",\n      value: function insert(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}/regionalinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'productId'],\n          pathParams: ['merchantId', 'productId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Regionalinventory;\n  }();\n\n  content_v2_1.Resource$Regionalinventory = Resource$Regionalinventory;\n\n  var Resource$Shippingsettings = /*#__PURE__*/function () {\n    function Resource$Shippingsettings(context) {\n      _classCallCheck(this, Resource$Shippingsettings);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Shippingsettings, [{\n      key: \"custombatch\",\n      value: function custombatch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/shippingsettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getsupportedcarriers\",\n      value: function getsupportedcarriers(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/supportedCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getsupportedholidays\",\n      value: function getsupportedholidays(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/supportedHolidays').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId'],\n          pathParams: ['merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['merchantId', 'accountId'],\n          pathParams: ['accountId', 'merchantId'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Shippingsettings;\n  }();\n\n  content_v2_1.Resource$Shippingsettings = Resource$Shippingsettings;\n})(content_v2_1 = exports.content_v2_1 || (exports.content_v2_1 = {}));","map":{"version":3,"sources":["/home/vitor/web-projects/starter-project/node_modules/googleapis/build/src/apis/content/v2.1.js"],"names":["Object","defineProperty","exports","value","googleapis_common_1","require","content_v2_1","Content","options","google","context","_options","accounts","Resource$Accounts","accountstatuses","Resource$Accountstatuses","accounttax","Resource$Accounttax","datafeeds","Resource$Datafeeds","datafeedstatuses","Resource$Datafeedstatuses","liasettings","Resource$Liasettings","orderinvoices","Resource$Orderinvoices","orderreports","Resource$Orderreports","orderreturns","Resource$Orderreturns","orders","Resource$Orders","pos","Resource$Pos","products","Resource$Products","productstatuses","Resource$Productstatuses","regionalinventory","Resource$Regionalinventory","shippingsettings","Resource$Shippingsettings","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar content_v2_1;\n(function (content_v2_1) {\n    /**\n     * Content API for Shopping\n     *\n     * Manages product items, inventory, and Merchant Center accounts for Google\n     * Shopping.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const content = google.content('v2.1');\n     *\n     * @namespace content\n     * @type {Function}\n     * @version v2.1\n     * @variation v2.1\n     * @param {object=} options Options for Content\n     */\n    class Content {\n        constructor(options, google) {\n            this.context = { _options: options || {}, google };\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountstatuses = new Resource$Accountstatuses(this.context);\n            this.accounttax = new Resource$Accounttax(this.context);\n            this.datafeeds = new Resource$Datafeeds(this.context);\n            this.datafeedstatuses = new Resource$Datafeedstatuses(this.context);\n            this.liasettings = new Resource$Liasettings(this.context);\n            this.orderinvoices = new Resource$Orderinvoices(this.context);\n            this.orderreports = new Resource$Orderreports(this.context);\n            this.orderreturns = new Resource$Orderreturns(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.pos = new Resource$Pos(this.context);\n            this.products = new Resource$Products(this.context);\n            this.productstatuses = new Resource$Productstatuses(this.context);\n            this.regionalinventory = new Resource$Regionalinventory(this.context);\n            this.shippingsettings = new Resource$Shippingsettings(this.context);\n        }\n    }\n    content_v2_1.Content = Content;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        authinfo(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/authinfo')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        claimwebsite(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/claimwebsite')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        link(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/link')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounts = Resource$Accounts;\n    class Resource$Accountstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accountstatuses/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accountstatuses/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accountstatuses = Resource$Accountstatuses;\n    class Resource$Accounttax {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounttax/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounttax/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounttax')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounttax/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounttax = Resource$Accounttax;\n    class Resource$Datafeeds {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/datafeeds/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeeds/{datafeedId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        fetchnow(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeeds/{datafeedId}/fetchNow')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeeds/{datafeedId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeeds/{datafeedId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Datafeeds = Resource$Datafeeds;\n    class Resource$Datafeedstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/datafeedstatuses/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeedstatuses/{datafeedId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Datafeedstatuses = Resource$Datafeedstatuses;\n    class Resource$Liasettings {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/liasettings/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getaccessiblegmbaccounts(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/liasettings')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listposdataproviders(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/liasettings/posdataproviders')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        requestgmbaccess(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/requestgmbaccess')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'gmbEmail'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        requestinventoryverification(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'country'],\n                pathParams: ['accountId', 'country', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setinventoryverificationcontact(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [\n                    'merchantId', 'accountId', 'contactEmail', 'contactName', 'country',\n                    'language'\n                ],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setposdataprovider(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/setposdataprovider')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'country'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Liasettings = Resource$Liasettings;\n    class Resource$Orderinvoices {\n        constructor(context) {\n            this.context = context;\n        }\n        createchargeinvoice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createChargeInvoice')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createrefundinvoice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createRefundInvoice')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderinvoices = Resource$Orderinvoices;\n    class Resource$Orderreports {\n        constructor(context) {\n            this.context = context;\n        }\n        listdisbursements(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreports/disbursements')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'disbursementStartDate'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        listtransactions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreports/disbursements/{disbursementId}/transactions')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'disbursementId', 'transactionStartDate'],\n                pathParams: ['disbursementId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderreports = Resource$Orderreports;\n    class Resource$Orderreturns {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreturns/{returnId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderreturns = Resource$Orderreturns;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/acknowledge')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        advancetestorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testorders/{orderId}/advance')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/cancel')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        cancellineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/cancelLineItem')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        canceltestorderbycustomer(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testorders/{orderId}/cancelByCustomer')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createtestorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/testorders')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        createtestreturn(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/testreturn')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getbymerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/ordersbymerchantid/{merchantOrderId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'merchantOrderId'],\n                pathParams: ['merchantId', 'merchantOrderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        gettestordertemplate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testordertemplates/{templateName}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'templateName'],\n                pathParams: ['merchantId', 'templateName'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        instorerefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/inStoreRefundLineItem')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        rejectreturnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/rejectReturnLineItem')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        returnrefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        setlineitemmetadata(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/setLineItemMetadata')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        shiplineitems(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/shipLineItems')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updatelineitemshippingdetails(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateLineItemShippingDetails')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updatemerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateMerchantOrderId')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        updateshipment(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateShipment')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orders = Resource$Orders;\n    class Resource$Pos {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/pos/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n                pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n                pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        inventory(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/inventory')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        sale(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/sale')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Pos = Resource$Pos;\n    class Resource$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/products/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Products = Resource$Products;\n    class Resource$Productstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/productstatuses/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/productstatuses/{productId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Productstatuses = Resource$Productstatuses;\n    class Resource$Regionalinventory {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/regionalinventory/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/products/{productId}/regionalinventory')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Regionalinventory = Resource$Regionalinventory;\n    class Resource$Shippingsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/shippingsettings/batch')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST'\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/shippingsettings/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getsupportedcarriers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/supportedCarriers')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        getsupportedholidays(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/supportedHolidays')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET'\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/shippingsettings/{accountId}')\n                        .replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT'\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Shippingsettings = Resource$Shippingsettings;\n})(content_v2_1 = exports.content_v2_1 || (exports.content_v2_1 = {}));\n//# sourceMappingURL=v2.1.js.map"]},"metadata":{},"sourceType":"script"}