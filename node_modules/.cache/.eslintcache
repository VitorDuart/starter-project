[{"/home/ewerton/node-files/starter-project/src/index.js":"1","/home/ewerton/node-files/starter-project/src/App.js":"2","/home/ewerton/node-files/starter-project/src/reportWebVitals.js":"3"},{"size":2787,"mtime":1637518919034,"results":"4","hashOfConfig":"5"},{"size":528,"mtime":1637518168306,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1637518168306,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"wv8keo",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ewerton/node-files/starter-project/src/index.js",["15"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nconst fs = require('fs');\nconst readline = require('readline');\nconst {google} = require('googleapis');\n\n\nconst SCOPES = ['https://www.googleapis.com/auth/drive.metadata.readonly'];\nconst TOKEN_PATH = 'token-sheet-music.json';\n\nfs.readFile('credentials.json', (err, content) => {\n  if (err) return console.log('Error loading client secret file:', err);\n  // Authorize a client with credentials, then call the Google Drive API.\n  authorize(JSON.parse(content), listFiles);\n});\n\nfunction authorize(credentials, callback) {\n  const {client_secret, client_id, redirect_uris} = credentials.installed;\n  const oAuth2Client = new google.auth.OAuth2(\n      client_id, client_secret, redirect_uris[0]);\n\n  // Check if we have previously stored a token.\n  fs.readFile(TOKEN_PATH, (err, token) => {\n    if (err) return getAccessToken(oAuth2Client, callback);\n    oAuth2Client.setCredentials(JSON.parse(token));\n    callback(oAuth2Client);\n  });\n}\n\nfunction getAccessToken(oAuth2Client, callback) {\n  const authUrl = oAuth2Client.generateAuthUrl({\n    access_type: 'offline',\n    scope: SCOPES,\n  });\n  console.log('Authorize this app by visiting this url:', authUrl);\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n  });\n  rl.question('Enter the code from that page here: ', (code) => {\n    rl.close();\n    oAuth2Client.getToken(code, (err, token) => {\n      if (err) return console.error('Error retrieving access token', err);\n      oAuth2Client.setCredentials(token);\n      // Store the token to disk for later program executions\n      fs.writeFile(TOKEN_PATH, JSON.stringify(token), (err) => {\n        if (err) return console.error(err);\n        console.log('Token stored to', TOKEN_PATH);\n      });\n      callback(oAuth2Client);\n    });\n  });\n}\n\nfunction listFiles(auth) {\n  const drive = google.drive({version: 'v3', auth});\n  drive.files.list({\n    pageSize: 10,\n    fields: 'nextPageToken, files(id, name)',\n  }, (err, res) => {\n    if (err) return console.log('The API returned an error: ' + err);\n    const files = res.data.files;\n    if (files.length) {\n      console.log('Files:');\n      files.map((file) => {\n        console.log(`${file.name} (${file.id})`);\n      });\n    } else {\n      console.log('No files found.');\n    }\n  });\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/ewerton/node-files/starter-project/src/App.js",[],"/home/ewerton/node-files/starter-project/src/reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":72,"column":24,"nodeType":"18","messageId":"19","endLine":72,"endColumn":26},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]